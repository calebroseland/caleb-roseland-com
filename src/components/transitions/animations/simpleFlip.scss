// naming convention: camelCase e.g. simpleFlipInX
$effect: "simpleFlip";
$flows: "In" "Out";
$rotations: (
  "X": (1, 0, 0, 90deg),
  "Y": (0, 1, 0, 90deg),
  "XInvert": (1, 0, 0, -90deg),
  "YInvert": (0, 1, 0, -90deg)
);
$directions: map-keys($rotations);
$perspective-distance: 400px;

@mixin transformed ($direction) {
  transform:
    perspective($perspective-distance)
    rotate3d(map-get($rotations, $direction));
  opacity: 0;
}

@mixin natural {
  transform:
    perspective($perspective-distance);
}

@each $flow in $flows {
  @each $direction in $directions {

    $name: #{$effect + $flow + $direction};

    @if map-has-key($rotations, $direction) {
      // define animation
      @keyframes #{$name} {
        @if $flow == "In" {
          from {@include transformed($direction);}
          to { @include natural(); }
        }

        @if $flow == "Out" {
          from { @include natural(); }
          to {@include transformed($direction);}
        }
      }
      // define class
      .#{$name} {
        animation-name: #{$name};
        backface-visibility: visible !important;
        transition-duration: .7s;
        animation-duration: .7s;
        @if ($flow == "Out") {
          transition-duration: .5s;
          animation-duration: .5s;
        }
      }
    }
  }
}
